{"version":3,"file":"tiny-popup-menu.min.js","sources":["../node_modules/tiny-emitter/index.js","../src/myPragma.ts","../src/tiny-popup-menu.tsx","../src/index-umd.ts"],"sourcesContent":["function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","export default function createElement(tagName, attrs = {}, ...children) {\n    if (typeof tagName === 'function')\n        return tagName(attrs, children);\n    const elem = tagName === null\n        ? new DocumentFragment()\n        : document.createElement(tagName);\n    Object.entries(attrs || {}).forEach(([name, value]) => {\n        if (typeof value !== undefined &&\n            value !== null &&\n            value !== undefined) {\n            if (name.startsWith('on') && name.toLowerCase() in window)\n                elem.addEventListener(name.toLowerCase().substr(2), value);\n            else {\n                if (name === 'className')\n                    elem.setAttribute('class', value.toString());\n                else if (name === 'htmlFor')\n                    elem.setAttribute('for', value.toString());\n                else\n                    elem.setAttribute(name, value.toString());\n            }\n        }\n    });\n    for (const child of children) {\n        if (!child)\n            continue;\n        if (Array.isArray(child))\n            elem.append(...child);\n        else {\n            if (child.nodeType === undefined)\n                elem.innerHTML += child;\n            else\n                elem.appendChild(child);\n        }\n    }\n    return elem;\n}\n//# sourceMappingURL=myPragma.js.map","import { TinyEmitter } from 'tiny-emitter';\nimport myPragma from './myPragma';\nimport './assets/scss/tiny-popup-menu.scss';\nconst ID = 'popup-menu';\nconst CLASS_CONTAINER = ID + '--container';\nconst CLASS_OPEN = ID + '--active';\nconst CLASS_SHOW_ARROW = ID + '--show-arrow';\nconst CLASS_SHOW_ARROW_TOP = ID + '--show-arrow-top';\nconst CLASS_SHOW_ARROW_BOTTOM = ID + '--show-arrow-bottom';\nconst CLASS_ITEM = ID + '--item';\nconst CLASS_ITEM_SEPARATOR = ID + '--item-separator';\nlet instances = 1;\n/**\n *\n * @param target\n * @param sources\n * @returns\n */\nconst deepObjectAssign = (target, ...sources) => {\n    sources.forEach((source) => {\n        Object.keys(source).forEach((key) => {\n            const s_val = source[key];\n            const t_val = target[key];\n            target[key] =\n                t_val &&\n                    s_val &&\n                    typeof t_val === 'object' &&\n                    typeof s_val === 'object' &&\n                    !Array.isArray(t_val) // Don't merge arrays\n                    ? deepObjectAssign(t_val, s_val)\n                    : s_val;\n        });\n    });\n    return target;\n};\n/**\n * @fires open\n * @fires close\n * @fires updateposition\n */\nexport default class TinyPopupMenu extends TinyEmitter {\n    constructor(options = null) {\n        super();\n        this._isOpen = false;\n        this._containerMenu = myPragma(\"div\", { id: `${ID}-${instances}` });\n        this._instanceOptions = this._parseOptions(options);\n        instances++;\n    }\n    /**\n     * Open Menu\n     * @fires open\n     * @param options\n     * @returns\n     */\n    open(options) {\n        if (this._isOpen) {\n            // clean menu items\n            this.close();\n            // if the same button is clicked, do not reopen\n            if (options.event.currentTarget === this._toggler) {\n                options.event.preventDefault();\n                options.event.stopPropagation();\n                return;\n            }\n        }\n        this._options = this._parseOptions(options);\n        const { event, menuItems, autoClose } = this._options;\n        this._toggler = event.currentTarget;\n        this._menuItemsList = menuItems.map((item) => {\n            if (item === '-') {\n                return myPragma(\"span\", { className: CLASS_ITEM_SEPARATOR });\n            }\n            else {\n                return (myPragma(\"div\", { className: CLASS_ITEM + ' ' + (item.className || ''), onClick: item.callback\n                        ? (event) => {\n                            item.callback(event);\n                            if (autoClose)\n                                this.close();\n                        }\n                        : null, id: item.id, style: item.style }, item.content));\n            }\n        });\n        this._isOpen = true;\n        this.updatePosition();\n        this.addEventListeners();\n        this.emit('open');\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    /**\n     * @fires close\n     * Close menu\n     */\n    close() {\n        this._containerMenu.innerHTML = '';\n        this._containerMenu.remove();\n        this._toggler.classList.remove(CLASS_OPEN);\n        this._isOpen = false;\n        this.removeEventListeners();\n        this.emit('close');\n    }\n    /**\n     * Update the position of an opened menu\n     * @fires updateposition\n     */\n    updatePosition(silent = true) {\n        /**\n         * Check if the default position is ok or needs to be inverted\n         */\n        const evaluatePosition = () => {\n            if (position === \"top\" /* Position.Top */) {\n                if (togglerPosition.top + menuHeight + offsetTop + margin <=\n                    0) {\n                    return \"bottom\" /* Position.Bottom */;\n                }\n            }\n            else if (position === \"bottom\" /* Position.Bottom */) {\n                if (togglerPosition.top +\n                    menuHeight +\n                    offsetTop +\n                    togglerHeight +\n                    margin >=\n                    document.documentElement.scrollHeight) {\n                    return \"top\" /* Position.Top */;\n                }\n            }\n            return position;\n        };\n        if (!this._isOpen)\n            return;\n        const { offset, className, arrow, position, margin } = this._options;\n        this._containerMenu.style.position = 'fixed';\n        this._containerMenu.className = className;\n        this._containerMenu.classList.add(ID);\n        if (arrow) {\n            this._containerMenu.classList.add(CLASS_SHOW_ARROW);\n        }\n        this._containerMenu.innerHTML = '';\n        this._containerMenu.append(myPragma(\"div\", { className: CLASS_CONTAINER }, ...this._menuItemsList));\n        document.body.append(this._containerMenu);\n        const togglerPosition = this._toggler.getBoundingClientRect();\n        const togglerHeight = this._toggler.offsetHeight;\n        const togglerWidth = this._toggler.offsetWidth;\n        const offsetLeft = (offset === null || offset === void 0 ? void 0 : offset.x) || 0;\n        const offsetTop = (offset === null || offset === void 0 ? void 0 : offset.y) || 0;\n        // Button height + menu height\n        const menuHeight = this._containerMenu.offsetHeight;\n        const menuWidth = this._containerMenu.offsetWidth;\n        // If menu is near bottom, show upright\n        const finalPosition = evaluatePosition();\n        let compensateMenuHeight = 0;\n        let compensateMenuWidthToCenter = 0;\n        switch (finalPosition) {\n            case \"bottom\" /* Position.Bottom */:\n                compensateMenuHeight = offsetTop + togglerHeight + margin;\n                compensateMenuWidthToCenter = -menuWidth / 2 + togglerWidth / 2;\n                break;\n            case \"top\" /* Position.Top */:\n                compensateMenuHeight = -menuHeight - margin;\n                compensateMenuWidthToCenter = -menuWidth / 2 + togglerWidth / 2;\n                break;\n        }\n        const windowWidth = window.innerWidth;\n        const calcualteLeft = togglerPosition.left + offsetLeft + compensateMenuWidthToCenter;\n        let adjustX = 0;\n        // it's outside the left border\n        if (calcualteLeft < 0) {\n            adjustX = 0 - calcualteLeft + margin;\n        }\n        else if (calcualteLeft + menuWidth > windowWidth) {\n            // it's outside the right border\n            adjustX = windowWidth - (calcualteLeft + menuWidth) - margin;\n        }\n        this._containerMenu.style.left = calcualteLeft + adjustX + 'px';\n        this._containerMenu.style.top =\n            togglerPosition.top + compensateMenuHeight + 'px';\n        this._toggler.classList.add(CLASS_OPEN);\n        if (arrow) {\n            // displace X css arrow\n            this._containerMenu.style.setProperty('--ofx', `${adjustX + 5}px`);\n            this._evaluateArrowPosition(finalPosition);\n        }\n        if (!silent) {\n            this.emit('updateposition');\n        }\n    }\n    /**\n     * Instead of creating onclick listeners on each toggler/button,\n     * you can add these using the `addToggler` method\n     *\n     * @param el\n     * @param options\n     * @param type\n     */\n    addToggler(el, options = {}, type = 'click') {\n        if (type === 'contextmenu') {\n            el.addEventListener('contextmenu', (event) => this.open(Object.assign(Object.assign({}, options), { event })));\n        }\n        else {\n            el.addEventListener('click', (event) => this.open(Object.assign(Object.assign({}, options), { event })));\n        }\n    }\n    /**\n     * Merge default options, instance options, and single open method options\n     * @param options\n     * @returns\n     */\n    _parseOptions(options) {\n        const defaultOptions = {\n            position: \"bottom\" /* Position.Bottom */,\n            className: '',\n            autoClose: true,\n            arrow: true,\n            margin: ('arrow' in (options || {}) ? options.arrow : true)\n                ? 10\n                : 2,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            menuItems: []\n        };\n        return deepObjectAssign({}, defaultOptions, this._instanceOptions || {}, options || {});\n    }\n    _evaluateArrowPosition(position) {\n        let arrowPositionClass = '';\n        switch (position) {\n            case \"bottom\" /* Position.Bottom */:\n                arrowPositionClass = CLASS_SHOW_ARROW_TOP;\n                break;\n            case \"top\" /* Position.Top */:\n                arrowPositionClass = CLASS_SHOW_ARROW_BOTTOM;\n                break;\n        }\n        this._containerMenu.classList.add(arrowPositionClass);\n    }\n    addEventListeners() {\n        // Close if click is outside the menu\n        this._closeListener = (evt) => {\n            if (!this._containerMenu.contains(evt.target)) {\n                this.close();\n            }\n        };\n        this._resizeListener = () => {\n            if (this._isOpen) {\n                this.updatePosition(false);\n            }\n        };\n        document.addEventListener('click', this._closeListener);\n        window.addEventListener('resize', this._resizeListener);\n    }\n    removeEventListeners() {\n        document.removeEventListener('click', this._closeListener);\n        window.removeEventListener('resize', this._resizeListener);\n    }\n}\n//# sourceMappingURL=tiny-popup-menu.js.map","import TinyPopupMenu from './tiny-popup-menu.js';\nimport * as utils from './tiny-popup-menu.js';\nObject.assign(TinyPopupMenu, utils);\nexport default TinyPopupMenu;\n//# sourceMappingURL=index-umd.js.map"],"names":["E","prototype","on","name","callback","ctx","e","this","push","fn","once","self","listener","off","apply","arguments","_","emit","data","slice","call","evtArr","i","len","length","evts","liveEvents","tinyEmitterModule","exports","TinyEmitter","createElement","tagName","attrs","children","elem","DocumentFragment","document","Object","entries","forEach","value","undefined","startsWith","toLowerCase","window","addEventListener","substr","setAttribute","toString","child","Array","isArray","append","nodeType","innerHTML","appendChild","ID","CLASS_CONTAINER","CLASS_OPEN","CLASS_SHOW_ARROW","CLASS_SHOW_ARROW_TOP","CLASS_SHOW_ARROW_BOTTOM","CLASS_ITEM","CLASS_ITEM_SEPARATOR","instances","deepObjectAssign","target","sources","source","keys","key","s_val","t_val","TinyPopupMenu","constructor","options","super","_isOpen","_containerMenu","myPragma","id","_instanceOptions","_parseOptions","open","close","event","currentTarget","_toggler","preventDefault","stopPropagation","_options","menuItems","autoClose","_menuItemsList","map","item","className","onClick","style","content","updatePosition","addEventListeners","remove","classList","removeEventListeners","silent","offset","arrow","position","margin","add","body","togglerPosition","getBoundingClientRect","togglerHeight","offsetHeight","togglerWidth","offsetWidth","offsetLeft","x","offsetTop","y","menuHeight","menuWidth","finalPosition","top","documentElement","scrollHeight","evaluatePosition","compensateMenuHeight","compensateMenuWidthToCenter","windowWidth","innerWidth","calcualteLeft","left","adjustX","setProperty","_evaluateArrowPosition","addToggler","el","type","assign","defaultOptions","arrowPositionClass","_closeListener","evt","contains","_resizeListener","removeEventListener","utils"],"mappings":"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","x_google_ignoreList":[0]}